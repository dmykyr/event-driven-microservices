version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nats:
    image: nats:latest
    ports:
      - "${NATS_EXTERNAL_PORT}:4222"
      - "6222:6222"
      - "${NATS_HTTP_PORT}:8222"
    volumes:
      - ./nats.conf:/etc/nats/nats.conf
      - nats_data:/data
    command: [ "--config", "/etc/nats/nats.conf" ]
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${NATS_HTTP_PORT}/varz" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  db-migration:
    build:
      context: ./common/database
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy

  fb-collector:
    build:
      context: .
      dockerfile: services/facebook-collector/Dockerfile
    ports:
      - "${FB_COLLECTOR_PORT}:${FB_COLLECTOR_PORT}"
    environment:
      - PORT=${FB_COLLECTOR_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - NATS_SERVERS=${NATS_SERVERS}
    depends_on:
      postgres:
        condition: service_healthy
      db-migration:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${FB_COLLECTOR_PORT}/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  ttk-collector:
    build:
      context: .
      dockerfile: services/tiktok-collector/Dockerfile
    ports:
      - "${TTK_COLLECTOR_PORT}:${TTK_COLLECTOR_PORT}"
    environment:
      - PORT=${TTK_COLLECTOR_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - NATS_SERVERS=${NATS_SERVERS}
    depends_on:
      postgres:
        condition: service_healthy
      db-migration:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${TTK_COLLECTOR_PORT}/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      - PORT=${GATEWAY_PORT}
      - NATS_SERVERS=${NATS_SERVERS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GATEWAY_PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      fb-collector:
        condition: service_healthy
      ttk-collector:
        condition: service_healthy
    restart: unless-stopped

  reporter:
    build:
      context: .
      dockerfile: services/reporter/Dockerfile
    ports:
      - "${REPORTER_PORT}:${REPORTER_PORT}"
    environment:
      - PORT=${REPORTER_PORT}
      - DATABASE_URL=${DATABASE_URL}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${REPORTER_PORT}/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped

  publisher:
    image: andriiuni/events
    environment:
      - EVENT_ENDPOINT=${EVENT_ENDPOINT}
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  nats_data:
    driver: local